/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen2_screen/Screen2ViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen2ViewBase::Screen2ViewBase() :
    buttonCallback(this, &Screen2ViewBase::buttonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background.setXY(0, 0);
    background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_SCREEN2_ID));
    add(background);

    button1.setXY(420, 9);
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_CONFIGURATION_ID), touchgfx::Bitmap(BITMAP_CONFIGURATION_ID));
    button1.setAction(buttonCallback);
    add(button1);

    textClock.setPosition(-124, 109, 124, 54);
    textClock.setColor(touchgfx::Color::getColorFromRGB(171, 171, 171));
    textClock.setLinespacing(0);
    touchgfx::Unicode::snprintf(textClockBuffer1, TEXTCLOCKBUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_AFF0).getText());
    textClock.setWildcard1(textClockBuffer1);
    touchgfx::Unicode::snprintf(textClockBuffer2, TEXTCLOCKBUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_N1RG).getText());
    textClock.setWildcard2(textClockBuffer2);
    textClock.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HUC6));
    add(textClock);

    circle.setPosition(479, 36, 200, 200);
    circle.setCenter(100, 100);
    circle.setRadius(72);
    circle.setLineWidth(6);
    circle.setArc(0, 180);
    circle.setCapPrecision(90);
    circlePainter.setColor(touchgfx::Color::getColorFromRGB(171, 171, 171));
    circle.setPainter(circlePainter);
    add(circle);
}

Screen2ViewBase::~Screen2ViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Screen2ViewBase::setupScreen()
{

}

void Screen2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button1)
    {
        //screenChange
        //When button1 clicked change screen to Screen1
        //Go to Screen1 with screen transition towards North
        application().gotoScreen1ScreenCoverTransitionNorth();
    }
}

void Screen2ViewBase::afterTransition()
{
    //moveCircle
    //When screen transition ends move circle
    //Move circle to x:140, y:36 with CubicOut easing in 750 ms (45 Ticks)
    circle.clearMoveAnimationEndedAction();
    circle.startMoveAnimation(140, 36, 45, touchgfx::EasingEquations::cubicEaseOut, touchgfx::EasingEquations::cubicEaseOut);

    //moveTextCircle
    //When screen transition ends move textClock
    //Move textClock to x:178, y:109 with CubicOut easing in 750 ms (45 Ticks)
    textClock.clearMoveAnimationEndedAction();
    textClock.startMoveAnimation(178, 109, 45, touchgfx::EasingEquations::cubicEaseOut, touchgfx::EasingEquations::cubicEaseOut);
}
